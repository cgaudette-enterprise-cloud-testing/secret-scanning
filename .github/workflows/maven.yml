# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: FF Test Suite CI Build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [ 28 ]
        target: [ default ]

    steps:
      - name: Checkout repo code
        uses: actions/checkout@v2.4.2

      - name: Create Gradle cache
        uses: gradle/gradle-build-action@v2.2.1

      - name: Create AVD cache
        uses: actions/cache@v3.0.5
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Set up JDK 8
        uses: actions/setup-java@v3.4.1
        with:
          java-version: 8
          distribution: corretto

      - name: Setup NPM
        uses: actions/setup-node@v3.4.0
        with:
          node-version: '12'

      - name: Start Appium server
        run: |
          npm install -g appium@v1.22.3
          appium -v
          appium &>/dev/null &

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2.25.0
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          #arch: x86_64
          profile: Nexus 5
          script: echo "Generated AVD snapshot for caching."

      - name: Run framework tests
        uses: reactivecircus/android-emulator-runner@v2.25.0
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          #arch: x86_64
          profile: Nexus 5
          script: mvn clean test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.api-level }}-${{ matrix.target }}
          path: |
            **/test-output/*
